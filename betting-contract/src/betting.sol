/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: MIT-OR-APACHE-2.0
pragma solidity ^0.8.23;

interface IBettingContract  {
    function betCounter() external view returns (uint256);

    function createBet(string calldata event_name, uint256 deadline, uint256[] memory options) external returns (uint256);

    function joinBet(uint256 bet_id, uint256 option) external payable;

    function resolveBet(uint256 bet_id, uint256 winning_option) external;

    function claimPrize(uint256 bet_id) external;

    function calculateWinningPool(uint256 bet_id) external view returns (uint256);

    function getBetOrganizer(uint256 bet_id) external view returns (address);

    function getBetDeadline(uint256 bet_id) external view returns (uint256);

    function getBetOptions(uint256 bet_id) external view returns (uint256[] memory);

    function getBetTotalPool(uint256 bet_id) external view returns (uint256);

    function getBetResolved(uint256 bet_id) external view returns (bool);

    function getBetWinningOption(uint256 bet_id) external view returns (uint256);

    function getPlayerBetAmount(uint256 bet_id, address player) external view returns (uint256);

    function getPlayerBetOption(uint256 bet_id, address player) external view returns (uint256);

    function getPlayerBetClaimed(uint256 bet_id, address player) external view returns (bool);

    function getBetPlayers(uint256 bet_id) external view returns (address[] memory);
}
